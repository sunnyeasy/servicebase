<?xml version="1.0" encoding="UTF-8"?>

<configuration>
    <property name="log.root.level" value="INFO" /> <!-- 日志级别 -->
	<property name="log.base" value="/data/log/user" /> <!-- 日志路径 -->
	<property name="log.moduleName" value="user" />  <!-- 模块名称， 影响日志配置名，日志文件名 -->
	<property name="log.max.size" value="100MB" /> <!-- 日志文件大小 -->

	<contextName>${log.moduleName}</contextName>
	<jmxConfigurator />

	<appender name="stdout" class="ch.qos.logback.core.ConsoleAppender">
		<layout class="ch.qos.logback.classic.PatternLayout">
                <pattern>%date{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%thread] %logger{56}.%method\(\):%L - %msg%n</pattern>
        </layout>
	</appender>

	<appender name="file.info" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<File>${log.base}/${log.moduleName}_info.log</File>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<FileNamePattern>${log.base}/archive_%d{yyyy-MM}/${log.moduleName}_all_%d{yyyy-MM-dd}.%i.log.zip
			</FileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy
				class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>${log.max.size}</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>
		<layout class="ch.qos.logback.classic.PatternLayout">
			<pattern>%date{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%thread] %logger{56}.%method\(\):%L - %msg%n</pattern>
		</layout>
	</appender>

    <appender name="file.error" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>${log.base}/${log.moduleName}_error.log</File>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>${log.base}/archive_%d{yyyy-MM}/${log.moduleName}_err_%d{yyyy-MM-dd}.%i.log.zip
            </FileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy
                class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>${log.max.size}</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>

        <layout class="ch.qos.logback.classic.PatternLayout">
            <pattern>%date{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%thread] %logger{56}.%method\(\):%L - %msg%n</pattern>
        </layout>

        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

	<appender name="file.async" class="ch.qos.logback.classic.AsyncAppender">
		<discardingThreshold>0</discardingThreshold>
		<queueSize>256</queueSize>
		<includeCallerData>true</includeCallerData>
		<appender-ref ref="file.info" />
	</appender>

    <logger name="com.easy" additivity="false">
        <level value="${log.root.level}" />
        ${log.stdout.ref}
        <appender-ref ref="file.async" />
        <appender-ref ref="file.error" />
        <appender-ref ref="stdout" />
    </logger>

<!--	log4jdbc-->
<!--	<logger name="jdbc.connection" additivity="false" level="OFF" />-->
<!--	<logger name="jdbc.resultset" additivity="false" level="OFF" />-->
<!--	<logger name="jdbc.audit" additivity="false" level="OFF" />-->
<!--	<logger name="jdbc.sqlonly" additivity="false" level="INFO" />-->
<!--	<logger name="jdbc.sqltiming" additivity="false" level="INFO" />-->

<!--	<logger name="com.ibatis" level="DEBUG" />-->
<!--	<logger name="com.ibatis.common.jdbc.SimpleDataSource" level="DEBUG" />-->
<!--	<logger name="com.ibatis.common.jdbc.ScriptRunner" level="DEBUG" />-->
<!--	<logger name="com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate" level="DEBUG" />-->
<!--	<logger name="java.sql.Connection" level="DEBUG" />-->
<!--	<logger name="java.sql.Statement" level="DEBUG" />-->
<!--	<logger name="java.sql.PreparedStatement" level="DEBUG" />-->
<!--	<logger name="java.sql.ResultSet" level="DEBUG" />-->
	<logger name="com.easy.user.model.mysql.dao" level="DEBUG" />

	<logger name="serviceStatsLog" additivity="false" level="OFF"/>

	<root level="${log.root.level}">
		<appender-ref ref="stdout"/>
		<appender-ref ref="file.async" />
		<appender-ref ref="file.error" />
	</root>

</configuration>